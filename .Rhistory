modelselect2 <- robj1[[svname]]['vgm_sum_fit'] #Reads model name
return modelselect2
}
modelselect <-function(model=''){
svname <- model
modelselect2 <- robj1[[svname]]['vgm_sum_fit'] #Reads model name
return modelselect2
}
modelselect <-function(model=''){
svname <- model
modelselect2 <- robj1[[svname]]['vgm_sum_fit'] #Reads model name
return (modelselect2)
}
modelselect(model = 'Mekong')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90")
svname <- model
modelselect2 <- robj1[[svname]]['vgm_sum_fit'] #Reads model name
return (modelselect2)
}
modelselect(model = 'Mekong')
modeluse <-modelselect(model = 'Mekong')
modelselect(model='ets')
modelselect()
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90")
if(missing(model)) model='Mekong'
svname <- model
modelselect2 <- robj1[[svname]]['vgm_sum_fit'] #Reads model name
return (modelselect2)
}
modelselect()
modelselect(model='ets')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90")
if(missing(model)) model='Mekong'
svname <- model
modelselect2 <- robj1[[svname]]['vgm_sum_fit'] #Reads model name
if(is.na(modelselect2)) print('Not a semi-variogram')
return (modelselect2)
}
modelselect(model='ets')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
#svname <- model
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
#if(is.na(modelselect2)) print('Not a semi-variogram')
return (modelselect2)
}
modelselect()
modelselect(model='ets')
test2 <- modelselect(model='ets')
exists(test2)
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
#if(is.na(modelselect2)) print('Not a semi-variogram')
if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
#if(is.na(modelselect2)) print('Not a semi-variogram')
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
#if(is.na(modelselect2)) print('Not a semi-variogram')
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
model
}
modelselect()
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
#if(is.na(modelselect2)) print('Not a semi-variogram')
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
print(model)
}
modelselect()
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
#if(is.na(modelselect2)) print('Not a semi-variogram')
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
print(model)
}
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
#if(is.na(modelselect2)) print('Not a semi-variogram')
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) print('Not a semi-variogram')
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect()
modelselect('f')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) warning('Not a semi-variogram')
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) warning('Not a semi-variogram')
#if(modelselect2=NULL) warning('A warning')
return (model,modelselect2)
}
modelselect()
model <- eval(parse(text = paste("mean(x,", names(robj1), ")")))
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop('Not a semi-variogram')
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste0('Not a semi-variogram Use',names(robj1))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste0('Not a semi-variogram Use',names(robj1)))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
names(robj1)
parse(names(robj1))
eval(names(robj1))
text(names(robj1))
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste0('Not a semi-variogram Use',eval(names(robj1)))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste0('Not a semi-variogram Use',eval(names(robj1)))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
DEM_to_process <- 'MERIT'
setwd('C:/Users/lh14461/PhD/DEM Work')
cci <- raster('Burdekin_CCI.tif') #Load CCI
#cci <- raster('Wax_lake_CCI.tif') #Load CCI
setwd(paste0('C:/Users/lh14461/PhD/DEM Work/DEM_for_SV_Calc/GSW_Threshold_90/',DEM_to_process,'_SV_Processed')) #Sets the wd
#setwd('C:/Users/lh14461/PhD/DEM Work')
rm(Processed_raster_list)
Processed_raster_list = list.files(pattern=".tif", recursive = TRUE) #List files
library(raster)
library(gstat)
library(stringr)
library(gridExtra)
library(ggplot2)
DEM_to_process <- 'MERIT'
setwd('C:/Users/lh14461/PhD/DEM Work')
cci <- raster('Burdekin_CCI.tif') #Load CCI
#cci <- raster('Wax_lake_CCI.tif') #Load CCI
setwd(paste0('C:/Users/lh14461/PhD/DEM Work/DEM_for_SV_Calc/GSW_Threshold_90/',DEM_to_process,'_SV_Processed')) #Sets the wd
#setwd('C:/Users/lh14461/PhD/DEM Work')
rm(Processed_raster_list)
Processed_raster_list = list.files(pattern=".tif", recursive = TRUE) #List files
deltaname <- word(Processed_raster_list, 1, sep = fixed('_')) #Delta names
deltanm <-names(robj1)
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste0('Not a semi-variogram Use',names(robj1)))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste('Not a semi-variogram. Use one of',names(robj1)))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste('Not a semi-variogram. Use one of',names(robj1)),collapse="")
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
dm <-(paste(names(robj1)),collapse="")
dm <-(paste(names(robj1)),collapse=" ")
dm <-(paste(names(robj1))collapse=" ")
paste(deltanm,collapse = "")
paste(deltanm,collapse = " ")
paste(deltanm,collapse = "   ")
paste(names(robj1),collapse = "   ")
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste('Not a semi-variogram. Use one of',names(robj1),collapse = "   "))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
dm <- paste(names(robj1),collapse = "   ")
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste('Not a semi-variogram. Use one of',dm))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste0('Not a semi-variogram. Use one of',names(robj1),collapse = "   "))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
modelselect <-function(model=''){
data("MERIT_semi_variograms_NoNugget_Threshold90") #Reads data
svname <- paste(names(robj1),collapse = "   ")
if(missing(model)) model='Mekong' #Sets default if missing
modelselect2 <- robj1[[model]]['vgm_sum_fit'] #Reads model name
if(is.null(modelselect2)) stop(paste0('Not a semi-variogram. Use one of',svname))
#if(modelselect2=NULL) warning('A warning')
return (modelselect2)
}
modelselect('f')
devtools::build()
devtools::install()
devtools::package_deps()
devtools::load_all(".")
devtools::load_all()
devtools::load_all()
devtools::load_all()
demgeneration()
raster <- raster::raster('data/An_giang_MERIT_extended_R_simulated_1.tif')
demgeneration(raster)
devtools::build()
devtools::load_all()
devtools::check()
search()
devtools::build()
devtools::load_all()
demgeneration(raster)
search()
devtools::load_all()
demgeneration(raster)
modeluse<-modelselect()
demgeneration(raster,modeluse)
demgeneration(raster,modeluse)
devtools::load_all(".")
demgeneration(raster,modeluse)
devtools::load_all(".")
demgeneration(raster,modeluse)
devtools::load_all(".")
demgeneration(raster,modeluse)
sim2<-demgeneration(raster,modeluse,nsim=3)
View(sim2)
devtools::load_all(".")
devtools::document()
devtools::document()
?
?demgeneration
?demgeneration
?demgeneration
devtools::load_all(".")
devtools::document()
?demgeneration
devtools::load_all(".")
devtools::document()
?demgeneration
roxygen2::roxygenise()
?demgeneration
devtools::load_all(".")
?demgeneration
devtools::document()
?demgeneration
nsim=3
target_raster <- raster
sim <-sim2
simDEM <-raster:stack()
for (i in 1:nsim)
{simxy <- sims[c('X','Y',paste0('sim',i))] #Read in xyz of simulations
simraster <- rasterFromXYZ(simxy) #Generate raster from xyz
simraster <- simraster+target_dem #Add simulations to target raster
simDEM <- raster::stack(simDEM,simraster)
#Below is some adjustment to align
#res(testraster) <- 0.000833333353499999 #Reset resolution to that of MERIT ascii
#testraster <- shift(testraster,0.000000000452, -0.000000000639) #Shift corners of DEM
#testraster <- shift(testraster,0.000000000452, 0.000000000361) #Shift corners of DEM
#testraster <- overlay(testraster, target_dem, fun = function(x,y) ifelse(is.na(x) & y >-10,y, x))
#writeRaster(testraster, filename = paste0('An_giang_MERIT_extended_R_simulated_',i,'.tif'), format="GTiff", overwrite=TRUE)
#writeRaster(testraster, filename = paste0('An_giang_MERIT_extended_R_simulated_avgSV_noFens_',i,'.asc'), format="ascii", overwrite=TRUE)
#Could add coordinate system to this
}
sims<-sim
simDEM <-raster:stack()
for (i in 1:nsim)
{simxy <- sims[c('X','Y',paste0('sim',i))] #Read in xyz of simulations
simraster <- rasterFromXYZ(simxy) #Generate raster from xyz
simraster <- simraster+target_dem #Add simulations to target raster
simDEM <- raster::stack(simDEM,simraster)
#Below is some adjustment to align
#res(testraster) <- 0.000833333353499999 #Reset resolution to that of MERIT ascii
#testraster <- shift(testraster,0.000000000452, -0.000000000639) #Shift corners of DEM
#testraster <- shift(testraster,0.000000000452, 0.000000000361) #Shift corners of DEM
#testraster <- overlay(testraster, target_dem, fun = function(x,y) ifelse(is.na(x) & y >-10,y, x))
#writeRaster(testraster, filename = paste0('An_giang_MERIT_extended_R_simulated_',i,'.tif'), format="GTiff", overwrite=TRUE)
#writeRaster(testraster, filename = paste0('An_giang_MERIT_extended_R_simulated_avgSV_noFens_',i,'.asc'), format="ascii", overwrite=TRUE)
#Could add coordinate system to this
}
simDEM <-raster:stack()
for (i in 1:nsim)
{simxy <- sims[c('X','Y',paste0('sim',i))] #Read in xyz of simulations
simraster <- rasterFromXYZ(simxy) #Generate raster from xyz
simraster <- simraster+target_raster #Add simulations to target raster
simDEM <- raster::stack(simDEM,simraster)
#Below is some adjustment to align
#res(testraster) <- 0.000833333353499999 #Reset resolution to that of MERIT ascii
#testraster <- shift(testraster,0.000000000452, -0.000000000639) #Shift corners of DEM
#testraster <- shift(testraster,0.000000000452, 0.000000000361) #Shift corners of DEM
#testraster <- overlay(testraster, target_dem, fun = function(x,y) ifelse(is.na(x) & y >-10,y, x))
#writeRaster(testraster, filename = paste0('An_giang_MERIT_extended_R_simulated_',i,'.tif'), format="GTiff", overwrite=TRUE)
#writeRaster(testraster, filename = paste0('An_giang_MERIT_extended_R_simulated_avgSV_noFens_',i,'.asc'), format="ascii", overwrite=TRUE)
#Could add coordinate system to this
}
simDEM <-raster:stack()
simDEM <- raster:stack()
simDEM <- raster::stack()
for (i in 1:nsim)
{simxy <- sims[c('X','Y',paste0('sim',i))] #Read in xyz of simulations
simraster <- rasterFromXYZ(simxy) #Generate raster from xyz
simraster <- simraster+target_raster #Add simulations to target raster
simDEM <- raster::stack(simDEM,simraster)
#Below is some adjustment to align
#res(testraster) <- 0.000833333353499999 #Reset resolution to that of MERIT ascii
#testraster <- shift(testraster,0.000000000452, -0.000000000639) #Shift corners of DEM
#testraster <- shift(testraster,0.000000000452, 0.000000000361) #Shift corners of DEM
#testraster <- overlay(testraster, target_dem, fun = function(x,y) ifelse(is.na(x) & y >-10,y, x))
#writeRaster(testraster, filename = paste0('An_giang_MERIT_extended_R_simulated_',i,'.tif'), format="GTiff", overwrite=TRUE)
#writeRaster(testraster, filename = paste0('An_giang_MERIT_extended_R_simulated_avgSV_noFens_',i,'.asc'), format="ascii", overwrite=TRUE)
#Could add coordinate system to this
}
formatR::tidy_dir()
devtools::load_all(".")
getwd()
library(formatR)
tidy_dir()
sim2save<-demgeneration(raster,modeluse,nsim=3)
devtools::check()
devtools::load_all(".")
devtools::document()
?demgeneration
devtools::build()
?demgeneration
sim2save
devtools::build()
devtools::check()
devtools::document()
devtools::load_all()
getwd()
r<-raster('data/An_giang_MERIT_extended_R_simulated_1.tif')
m<-modelselect()
sims <- demgeneration(r,m,nsim=3)
devtools::load_all()
sims <- demgeneration(r,m,nsim=3)
View(demgeneration)
?demgeneration
devtools::check_man()
?modelselect
?modelselect
?hello
?demgeneration
devtools::build_vignettes()
devtools::dev_packages()
devtools::as.package()
R CMD Rd2pdf MERITdemgeneratorr
R CMD check
pack <- "MERITdengeneratorr"
path <- find.package(pack)
library(roxygen2)
R CMD Rd2pdf MERITdemgeneratorr
devtools::load_all()
file.exists("~/.ssh/id_rsa.pub")
devtools::build()
R CMD Check
library(MERITdemgeneratorr)
?demgeneration
?modelselect
?hello
library(MERITdemgeneratorr)
?demgeneration
library(MERITdemgeneratorr)
browseVignettes()
devtools::use_vignette("MERITdemgeneratorr")
devtools::build_vignettes()
devtools::check(manual=TRUE)
devtools::install()
library(MERITdemgeneratorr)
?demgeneration
devtools::install()
devtools::build_vignettes()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::document()
devtools::build()
library(MERITdemgeneratorr)
modelselect()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
library(MERITdemgeneratorr)
raster('data/An_giang_MERIT_extended_R_simulated_1.tif)
raster('data/An_giang_MERIT_extended_R_simulated_1.tif')
raster('data/An_giang_MERIT_extended_R_simulated_1.tif')
ras <- raster('data/An_giang_MERIT_extended_R_simulated_1.tif')
sv_model <- modelselect()
res <- demgeneration(ras,sv_model,0.012,3)
devtools::build()
res2 <- demgeneration(ras,sv_model,0.012,3)
res3 <- demgeneration(ras,sv_model,maxdist=0.012,nsim=3)
View(demgeneration)
writeRaster(res,filename = names(res), bylayer=TRUE,format="GTiff")
writeRaster(res,filename = names(res), bylayer=TRUE,format="GTiff",overwrite=TRUE)
names(res)
d2<unstack(res)
d2<-unstack(res)
outputnames <- paste(seq_along(d2), ".tiff",sep="")
for(i in seq_along(d2)){writeRaster(d2[[i]], file=outputnames[i])}
outputnames2 <- paste(seq_along(d2))
filename<-"exp"
format<-format
for(i in seq_along(d2)){writeRaster(d2[[i]], file=paste0(filename,outputnames[i]), format=format)}
file=paste0(filename,outputnames[i])
format=format
format="GTiff"
format=format
for(i in seq_along(d2)){writeRaster(d2[[i]], file=paste0(filename,outputnames[i]), format=format)}
for(i in seq_along(d2)){writeRaster(d2[[i]], file=paste0(filename,outputnames2[i]), format=format)}
for(i in seq_along(d2)){writeRaster(d2[[i]], file=paste0(filename,outputnames2[i]), format=format,overwrite=TRUE)}
devtools::build()
devtools::document()
devtools::build()
for(i in seq_along(d2)){writeRaster(d2[[i]], file=paste0(filename,outputnames2[i]), format="ascii",overwrite=TRUE)}
?writeRasterDEM
?demgeneration
devtools::build()
res4 <- demgeneration(ras,sv_model,0.007,3)
library(devtools)
devtools::build()
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
ssh-keygen -t rsa -C "laurence.hawker@bristol.ac.uk"
devtools::build()
devtools::build()
